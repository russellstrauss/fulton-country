@import url(../../vendors/css/bootstrap.min.css);
@import url(../../vendors/css/swiper.min.css);
@import url(../../vendors/css/bootstrap-select.min.css);
@import url(../../vendors/css/pop-up-calendar.min.css);
@import url(../../vendors/css/event-calendar.min.css);
body {
  font-size: 16px;
  line-height: normal; }

h1, h2, h3, h4, h5, h6 {
  margin-bottom: 20px; }

img {
  max-width: 100%; }

label {
  margin: 0; }

@media all and (-ms-high-contrast: none) {
  svg {
    max-height: 1em; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
